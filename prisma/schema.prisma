// Database connection
datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

// Generator
generator client {
  provider = "prisma-client-js"
}

// Models
model User {
  id        String    @id @default(cuid())
  name      String
  username  String    @unique
  password  String
  phone     String?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  listings  Listing[]
}

model Category {
  id          String    @id @default(cuid())
  name        String
  slug        String    @unique
  description String?
  listings    Listing[]
}

model Listing {
  id              String    @id @default(cuid())
  title           String
  publicDescription String?
  adminComment      String?
  categoryId      String
  category        Category  @relation(fields: [categoryId], references: [id])
  userId          String
  user            User      @relation(fields: [userId], references: [id])
  district        String?
  address         String?
  rooms           Int?
  houseArea       Float?
  landArea        Float?
  floor           Int?
  totalFloors     Int?
  condition       String?
  yearBuilt       Int?
  noEncumbrances  Boolean?  @default(false)
  noKids          Boolean?  @default(false)
  price           Float
  currency        String    @default("â‚½")
  dateAdded       DateTime  @default(now())
  listingCode     String    @unique
  status          String    @default("active")
  images          Image[]
  comments        Comment[]
}

model Image {
  id        String  @id @default(cuid())
  listingId String
  listing   Listing @relation(fields: [listingId], references: [id], onDelete: Cascade)
  path      String
  isFeatured Boolean @default(false)
}

model Comment {
  id        String   @id @default(cuid())
  listingId String
  listing   Listing  @relation(fields: [listingId], references: [id], onDelete: Cascade)
  content   String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}